buildscript {
    ext {
        restdocsApiSpecVersion = '0.18.2'
    }
}

plugins {
    id 'java'
    id 'jacoco'
    id 'org.springframework.boot' version '3.1.2'
    id 'io.spring.dependency-management' version '1.1.2'
    id 'com.epages.restdocs-api-spec' version "${restdocsApiSpecVersion}" //RestDocs
    id 'org.hidetake.swagger.generator' version '2.19.2' //SwaggerUI
}

group = 'com.commerce'
version = '0.0.1-SNAPSHOT'

jacoco {
    toolVersion = "0.8.10"
    reportsDirectory = layout.buildDirectory.dir('JacocoReportDir')
}

java {
    sourceCompatibility = '17'
}

def querydslDir = "src/main/generated"

sourceSets {
    main.java.srcDirs += [ querydslDir ]
}

tasks.withType(JavaCompile) {
    options.getGeneratedSourceOutputDirectory().set(file(querydslDir))
}

clean.doLast {
    file(querydslDir).deleteDir()
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

swaggerSources {
    sample {
        setInputFile(file("${project.buildDir}/api-spec/openapi3.yaml"))
    }
}

dependencies {
    //spring
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    //oauth
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

    //lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok' // 테스트 의존성 추가
    testAnnotationProcessor 'org.projectlombok:lombok' // 테스트 의존성 추가

    //DB
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'com.mysql:mysql-connector-j'

    //NCP
    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

    //jwt
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-gson:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'

    //Rest Assured and RestDocs
    testImplementation 'org.springframework.restdocs:spring-restdocs-restassured'
    testImplementation "com.epages:restdocs-api-spec-restassured:${restdocsApiSpecVersion}"
    testImplementation "com.epages:restdocs-api-spec-mockmvc:${restdocsApiSpecVersion}"
    testImplementation 'io.rest-assured:rest-assured:5.3.1'

    //SwaggerUI
    swaggerUI 'org.webjars:swagger-ui:5.4.2'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'

    // queryDSL
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"
}

test {
    systemProperty "spring.profiles.active", "test"
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    reports {
        xml.required = true
        csv.required = false
        html.required = true
    }

    afterEvaluate {
        classDirectories.setFrom(
                files(classDirectories.files.collect {
                    fileTree(dir: it, excludes: [
                            '**/*Application*', // Exclude SpringApplication
                            '**/*Fixture*',     // Exclude Fixture Class
                            "**/Q*.class",    // Exclude QueryDsl Class
                            '**/*Config*'     // Exclude Config class
                    ])
                })
        )
    }
}

task copyGitSubmodule(type: Copy) {
    from './backend-config'
    include '*.yml'
    into './src/main/resources'
}


processResources {
    dependsOn copyGitSubmodule
}

tasks.register('copySwaggerUI', Copy) {
    dependsOn 'openapi3'

    delete file('src/main/resources/static/docs/')

    from "$buildDir/api-spec/openapi3.yaml"
    into "src/main/resources/static/docs/"
}

//openAPI 작성 자동화를 위해 패키징 전에 openapi3 테스크 선실행을 유발
bootJar{
    dependsOn('copySwaggerUI')
}

openapi3 {
    server = "http://115.85.182.164:8080"
    title = "API 문서"
    description = "Spring REST Docs with SwaggerUI."
    version = "0.0.1"
    format = 'yaml'

    outputDirectory = "build/api-spec"
}
