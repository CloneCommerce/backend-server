buildscript {
    ext {
        restdocsApiSpecVersion = '0.18.2'
    }
}

plugins {
    id 'java'
    id 'jacoco'
    id 'org.springframework.boot' version '3.1.2'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id 'com.epages.restdocs-api-spec' version "${restdocsApiSpecVersion}" //RestDocs
    id 'org.hidetake.swagger.generator' version '2.19.2' //SwaggerUI
}

group = 'com.commerce'
version = '0.0.1-SNAPSHOT'

jacoco {
    toolVersion = "0.8.10"
    reportsDirectory = layout.buildDirectory.dir('JacocoReportDir')
}

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

openapi3 {
    setServer("http://localhost:8080")
    title = "restdocs-swagger API Documentation"
    description = "Spring REST Docs with SwaggerUI."
    version = "0.0.1"
    format = "yaml"
}

swaggerSources {
    sample {
        setInputFile(file("${project.buildDir}/api-spec/openapi3.yaml"))
    }
}

dependencies {
    //spring
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    //oauth
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

    //lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok' // 테스트 의존성 추가
    testAnnotationProcessor 'org.projectlombok:lombok' // 테스트 의존성 추가

    //DB
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'com.mysql:mysql-connector-j'

    //jwt
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-gson:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'

    //Rest Assured
    testImplementation "com.epages:restdocs-api-spec-restassured:${restdocsApiSpecVersion}"
    testImplementation 'io.rest-assured:rest-assured'

    //SwaggerUI
    swaggerUI 'org.webjars:swagger-ui:5.4.2'
}

test {
    systemProperty "spring.profiles.active", "test"
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    reports {
        xml.required = true
        csv.required = false
        html.required = true
    }
}

task copyGitSubmodule(type: Copy) {
    from './backend-config'
    include '*.yml'
    into './src/main/resources'
}

processResources {
    dependsOn copyGitSubmodule
}

// GenerateSwaggerUI task 가, openapi3 task 를 의존하도록 설정
tasks.withType(GenerateSwaggerUI).configureEach {
    dependsOn 'openapi3'
}

// 생성된 SwaggerUI 를 jar 에 포함시키기 위해 build/resources 경로로 로 복사
 tasks.register('copySwaggerUI', Copy) {
     dependsOn 'generateSwaggerUISample'

     def generateSwaggerUISampleTask = tasks.named('generateSwaggerUISample', GenerateSwaggerUI).get()

     from("${generateSwaggerUISampleTask.outputDir}")
     into("${project.buildDir}/resources/main/static/docs")
 }

// bootJar 실행 전, copySwaggerUI 를 실행하도록 설정
tasks.withType(BootJar).configureEach {
    dependsOn 'copySwaggerUI'
}