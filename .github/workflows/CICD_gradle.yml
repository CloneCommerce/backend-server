name: CI-CD

on:
  pull_request:
    branches:
      - 'master'
      - 'develop'
  push:
    branches:
      - 'develop'

jobs:
  build:
    name: "Commerce Automated CI/CD Pipeline"
    runs-on: ubuntu-latest
    steps:
      - name: (Set Up) checkout
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GIT_TOKEN }}
          submodules: true

      - name: (Set Up) Set up Python for Documentation
        uses: actions/setup-python@v4
        with:
          python-version: 3.8

      - name: (Set Up) Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: (Set Up) Grant Execute permission for gradlew
        run: chmod 777 gradlew

      - name: (Build) Build with Gradle
        run: ./gradlew clean build -i

      - name: (Test) Test Result
        uses: EnricoMi/publish-unit-test-result-action/composite@v2
        if: always()
        with:
          files: '**/build/test-results/test/TEST-*.xml'

      - name: (Test) Test Failure Occurred Documentation.
        uses: mikepenz/action-junit-report@v3
        if: always()
        with:
          report_paths: '**/build/test-results/test/TEST-*.xml'
          token: ${{ github.token }}

      - name: (Test) Jacoco Coverage Report to PR
        id: jacoco
        uses: madrapps/jacoco-report@v1.6.1
        with:
          paths: ${{ github.workspace }}/build/JacocoReportDir/test/jacocoTestReport.xml
          token: ${{ secrets.GITHUB_TOKEN }}
          min-coverage-overall: 40
          min-coverage-changed-files: 60
          title: ðŸ“ƒCode Coverage Report
          update-comment: true
          pass-emoji: ':o:'
          fail-emoji: ':x:'

      - name: (Test) Coveralls Coverage Badge
        uses: coverallsapp/github-action@v2
        with:
          github-token: ${{ github.token }}

      - name: (Trigger) Check Conditions and Skip Deployment
        if: |
          github.ref != 'refs/heads/master' || github.event_name != 'push'
        run: |
          echo "The workflow is ending as the push has not been made to the master branch."
          exit 0

      - name: (Deploy) Deploy to NCP Server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.DEPLOY_SSH_HOST }}
          port: ${{ secrets.DEPLOY_SSH_PORT }}
          username: ${{ secrets.DEPLOY_SSH_USERNAME }}
          password: ${{ secrets.DEPLOY_SSH_PASSWORD }}
          source: "build/libs/*.jar"
          target: "source"
          rm: true

      - name: (Deploy) Run Gradle After Build
        if: steps.deploy.outcome == 'success'
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEPLOY_SSH_HOST }}
          port: ${{ secrets.DEPLOY_SSH_PORT }}
          username: ${{ secrets.DEPLOY_SSH_USERNAME }}
          password: ${{ secrets.DEPLOY_SSH_PASSWORD }}
          script: |
            SOURCE_DIR=source/build/libs
            FILE_NAME=`find $SOURCE_DIR/*SNAPSHOT.jar -printf "%f\n"`
            PID=$(lsof -i:8080 | awk '{print $2}' | grep -o '[0-9]*')
            
            if [ -z "$PID" ]; then
                    echo "#### THERE IS NO PROCESS ####"
            else
                    echo "#### KILL $PID ####"
                    sudo kill $PID
            fi
            
            echo "#### RUN $SOURCE_DIR/$FILE_NAME ####"
            sudo java -jar -Dspring.profiles.active=db $SOURCE_DIR/$FILE_NAME > /dev/null 2>&1 &
            

      - name: (Docs) Release Drafter
        uses: release-drafter/release-drafter@v5
        with:
          config-name: release-drafter-config.yml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
